Create Terraform Infrastructure with Docker: - Terraform workflow by deploying an NGINX Docker container

After you install Terraform and Docker on your local machine, start Docker Desktop.

open -a Docker

Create a directory named learn-terraform-docker-container.

mkdir learn-terraform-docker-container

Then, navigate into it.

cd learn-terraform-docker-container

Paste the following Terraform configuration into a file and name it main.tf

In a code editor create a new main.tf file. ".tf" is the terraform extension file. 

terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "~> 2.13.0"
    }
  }
}

provider "docker" {}

resource "docker_image" "nginx" {
  name         = "nginx:latest"
  keep_locally = false
}

resource "docker_container" "nginx" {
  image = docker_image.nginx.latest
  name  = "tutorial"
  ports {
    internal = 80
    external = 8000
  }
}

In the "Terminal" tab, initialize the project, which downloads a plugin that allows Terraform to interact with Docker: 

terraform init

Provision the NGINX server container with apply. When Terraform asks you to confirm, type yes and press ENTER:

terraform apply

Verify the existence of the NGINX container by visiting localhost:8000 in your web browser or running docker ps to see the container. Run docker ps to view the 
NGINX container running in Docker via Terraform.

docker ps

Destroy resources
To stop the container and destroy the resources created in this tutorial, run terraform destroy. When Terraform asks you to confirm, type yes and press ENTER.

terraform destroy

You have now provisioned and destroyed an NGINX webserver with Terraform.




